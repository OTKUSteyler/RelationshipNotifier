(function(g,t,d,y,h,R,b){"use strict";const{FormSwitchRow:u}=b.Forms;function v(){return R.useProxy(t.storage),h.React.createElement(h.React.Fragment,null,h.React.createElement(u,{label:"Friend Adds",subLabel:"Notify when someone adds you as a friend",value:t.storage.notifyFriendAdds,onValueChange:function(e){t.storage.notifyFriendAdds=e}}),h.React.createElement(u,{label:"Friend Removals",subLabel:"Notify when someone removes you as a friend",value:t.storage.notifyFriendRemovals,onValueChange:function(e){t.storage.notifyFriendRemovals=e}}),h.React.createElement(u,{label:"Blocks",subLabel:"Notify when someone blocks you",value:t.storage.notifyBlocks,onValueChange:function(e){t.storage.notifyBlocks=e}}),h.React.createElement(u,{label:"Unblocks",subLabel:"Notify when someone unblocks you",value:t.storage.notifyUnblocks,onValueChange:function(e){t.storage.notifyUnblocks=e}}),h.React.createElement(u,{label:"Ignore Bots",subLabel:"Don't notify for bot account changes",value:t.storage.ignoreBots,onValueChange:function(e){t.storage.ignoreBots=e}}))}t.storage.notifyFriendAdds??=!0,t.storage.notifyFriendRemovals??=!0,t.storage.notifyBlocks??=!0,t.storage.notifyUnblocks??=!0,t.storage.showInChat??=!0,t.storage.ignoreBots??=!1;const f=d.findByProps("getRelationships"),l=d.findByProps("getUser","getUsers"),{getCurrentUser:m}=d.findByProps("getCurrentUser"),{getRelationshipType:k}=d.findByProps("getRelationshipType"),c={FRIEND:1,BLOCKED:2,PENDING_INCOMING:3,PENDING_OUTGOING:4,IMPLICIT:5,NONE:0};var U=t.definePlugin({name:"RelationshipNotifier",description:"Notifies you when someone removes you as a friend, adds you as a friend, blocks you, or unblocks you.",authors:[{name:"Your Name",id:"your.discord.id"}],onStart(){this.cachedRelationships={...f.getRelationships()},this.origFunctions={};const e=d.findByProps("removeRelationship","addRelationship");e&&(this.origFunctions.removeRelationship=e.removeRelationship,this.origFunctions.addRelationship=e.addRelationship,this.origFunctions.blockUser=e.blockUser,this.origFunctions.unblockUser=e.unblockUser,e.removeRelationship=this.patchRemoveRelationship(e.removeRelationship),e.addRelationship=this.patchAddRelationship(e.addRelationship),e.blockUser=this.patchBlockUser(e.blockUser),e.unblockUser=this.patchUnblockUser(e.unblockUser)),this.relationshipChangeHandler=this.onRelationshipChange.bind(this),f.addChangeListener(this.relationshipChangeHandler)},onStop(){f.removeChangeListener(this.relationshipChangeHandler);const e=d.findByProps("removeRelationship","addRelationship");e&&this.origFunctions&&(this.origFunctions.removeRelationship&&(e.removeRelationship=this.origFunctions.removeRelationship),this.origFunctions.addRelationship&&(e.addRelationship=this.origFunctions.addRelationship),this.origFunctions.blockUser&&(e.blockUser=this.origFunctions.blockUser),this.origFunctions.unblockUser&&(e.unblockUser=this.origFunctions.unblockUser))},onRelationshipChange(){var e=this;const i=f.getRelationships(),r=m().id;Object.entries(this.cachedRelationships).forEach(function(n){let[o,a]=n;if(i[o]!==void 0||o===r)return;const s=l.getUser(o);s&&(t.storage.ignoreBots&&s.bot||a===c.FRIEND&&t.storage.notifyFriendRemovals&&e.notify(`${s.username} removed you as a friend.`))}),Object.entries(i).forEach(function(n){let[o,a]=n;if(e.cachedRelationships[o]===a||o===r)return;const s=l.getUser(o);s&&(t.storage.ignoreBots&&s.bot||(a===c.FRIEND&&e.cachedRelationships[o]!==c.FRIEND&&t.storage.notifyFriendAdds&&e.notify(`${s.username} added you as a friend.`),a===c.BLOCKED&&e.cachedRelationships[o]!==c.BLOCKED&&t.storage.notifyBlocks&&e.notify(`${s.username} blocked you.`),a!==c.BLOCKED&&e.cachedRelationships[o]===c.BLOCKED&&t.storage.notifyUnblocks&&e.notify(`${s.username} unblocked you.`)))}),this.cachedRelationships={...i}},patchRemoveRelationship(e){var i=this;return function(){for(var r=arguments.length,n=new Array(r),o=0;o<r;o++)n[o]=arguments[o];const a=n[0],s=l.getUser(a),F=k(a);return s&&F===c.FRIEND&&t.storage.notifyFriendRemovals&&(t.storage.ignoreBots&&s.bot||i.notify(`You removed ${s.username} as a friend.`)),e(...n)}},patchAddRelationship(e){var i=this;return function(){for(var r=arguments.length,n=new Array(r),o=0;o<r;o++)n[o]=arguments[o];const a=n[0],s=l.getUser(a);return s&&t.storage.notifyFriendAdds&&(t.storage.ignoreBots&&s.bot||i.notify(`You added ${s.username} as a friend.`)),e(...n)}},patchBlockUser(e){var i=this;return function(){for(var r=arguments.length,n=new Array(r),o=0;o<r;o++)n[o]=arguments[o];const a=n[0],s=l.getUser(a);return s&&t.storage.notifyBlocks&&(t.storage.ignoreBots&&s.bot||i.notify(`You blocked ${s.username}.`)),e(...n)}},patchUnblockUser(e){var i=this;return function(){for(var r=arguments.length,n=new Array(r),o=0;o<r;o++)n[o]=arguments[o];const a=n[0],s=l.getUser(a);return s&&t.storage.notifyUnblocks&&(t.storage.ignoreBots&&s.bot||i.notify(`You unblocked ${s.username}.`)),e(...n)}},notify(e){y.showToast(e,{duration:5e3})},settings:v});return g.default=U,Object.defineProperty(g,"__esModule",{value:!0}),g})({},vendetta.plugin,vendetta.metro,vendetta.ui.toasts,vendetta.metro.common,vendetta.storage,vendetta.ui.components);
