(function(u,s,c,g,f){"use strict";const{FormText:R}=f.Forms;function y(){return React.createElement(R,null,"Hello, world!")}s.storage.notifyFriendAdds??=!0,s.storage.notifyFriendRemovals??=!0,s.storage.notifyBlocks??=!0,s.storage.notifyUnblocks??=!0,s.storage.showInChat??=!0,s.storage.ignoreBots??=!1;const l=c.findByProps("getRelationships"),d=c.findByProps("getUser","getUsers"),{getCurrentUser:m}=c.findByProps("getCurrentUser"),{getRelationshipType:p}=c.findByProps("getRelationshipType"),h={FRIEND:1,BLOCKED:2,PENDING_INCOMING:3,PENDING_OUTGOING:4,IMPLICIT:5,NONE:0};var b=s.definePlugin({name:"RelationshipNotifier",description:"Notifies you when someone removes you as a friend, adds you as a friend, blocks you, or unblocks you.",authors:[{name:"Your Name",id:"your.discord.id"}],onStart(){this.cachedRelationships={...l.getRelationships()},this.origFunctions={};const e=c.findByProps("removeRelationship","addRelationship");e&&(this.origFunctions.removeRelationship=e.removeRelationship,this.origFunctions.addRelationship=e.addRelationship,this.origFunctions.blockUser=e.blockUser,this.origFunctions.unblockUser=e.unblockUser,e.removeRelationship=this.patchRemoveRelationship(e.removeRelationship),e.addRelationship=this.patchAddRelationship(e.addRelationship),e.blockUser=this.patchBlockUser(e.blockUser),e.unblockUser=this.patchUnblockUser(e.unblockUser)),this.relationshipChangeHandler=this.onRelationshipChange.bind(this),l.addChangeListener(this.relationshipChangeHandler)},onStop(){l.removeChangeListener(this.relationshipChangeHandler);const e=c.findByProps("removeRelationship","addRelationship");e&&this.origFunctions&&(this.origFunctions.removeRelationship&&(e.removeRelationship=this.origFunctions.removeRelationship),this.origFunctions.addRelationship&&(e.addRelationship=this.origFunctions.addRelationship),this.origFunctions.blockUser&&(e.blockUser=this.origFunctions.blockUser),this.origFunctions.unblockUser&&(e.unblockUser=this.origFunctions.unblockUser))},onRelationshipChange(){var e=this;const a=l.getRelationships(),r=m().id;Object.entries(this.cachedRelationships).forEach(function(n){let[t,i]=n;if(a[t]!==void 0||t===r)return;const o=d.getUser(t);o&&(s.storage.ignoreBots&&o.bot||i===h.FRIEND&&s.storage.notifyFriendRemovals&&e.notify(`${o.username} removed you as a friend.`))}),Object.entries(a).forEach(function(n){let[t,i]=n;if(e.cachedRelationships[t]===i||t===r)return;const o=d.getUser(t);o&&(s.storage.ignoreBots&&o.bot||(i===h.FRIEND&&e.cachedRelationships[t]!==h.FRIEND&&s.storage.notifyFriendAdds&&e.notify(`${o.username} added you as a friend.`),i===h.BLOCKED&&e.cachedRelationships[t]!==h.BLOCKED&&s.storage.notifyBlocks&&e.notify(`${o.username} blocked you.`),i!==h.BLOCKED&&e.cachedRelationships[t]===h.BLOCKED&&s.storage.notifyUnblocks&&e.notify(`${o.username} unblocked you.`)))}),this.cachedRelationships={...a}},patchRemoveRelationship(e){var a=this;return function(){for(var r=arguments.length,n=new Array(r),t=0;t<r;t++)n[t]=arguments[t];const i=n[0],o=d.getUser(i),v=p(i);return o&&v===h.FRIEND&&s.storage.notifyFriendRemovals&&(s.storage.ignoreBots&&o.bot||a.notify(`You removed ${o.username} as a friend.`)),e(...n)}},patchAddRelationship(e){var a=this;return function(){for(var r=arguments.length,n=new Array(r),t=0;t<r;t++)n[t]=arguments[t];const i=n[0],o=d.getUser(i);return o&&s.storage.notifyFriendAdds&&(s.storage.ignoreBots&&o.bot||a.notify(`You added ${o.username} as a friend.`)),e(...n)}},patchBlockUser(e){var a=this;return function(){for(var r=arguments.length,n=new Array(r),t=0;t<r;t++)n[t]=arguments[t];const i=n[0],o=d.getUser(i);return o&&s.storage.notifyBlocks&&(s.storage.ignoreBots&&o.bot||a.notify(`You blocked ${o.username}.`)),e(...n)}},patchUnblockUser(e){var a=this;return function(){for(var r=arguments.length,n=new Array(r),t=0;t<r;t++)n[t]=arguments[t];const i=n[0],o=d.getUser(i);return o&&s.storage.notifyUnblocks&&(s.storage.ignoreBots&&o.bot||a.notify(`You unblocked ${o.username}.`)),e(...n)}},notify(e){g.showToast(e,{duration:5e3})},settings:y});return u.default=b,Object.defineProperty(u,"__esModule",{value:!0}),u})({},vendetta.plugin,vendetta.metro,vendetta.ui.toasts,vendetta.ui.components);
